{"ast":null,"code":"import { createTextVNode as _createTextVNode, mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\nimport { ref, watch, provide, computed, nextTick, reactive, onMounted, defineComponent } from \"vue\";\nimport { isDef, extend, addUnit, toArray, FORM_KEY, numericProp, unknownProp, resetScroll, formatNumber, preventDefault, makeStringProp, makeNumericProp, createNamespace } from \"../utils/index.mjs\";\nimport { cutString, runSyncRule, endComposing, mapInputType, isEmptyValue, startComposing, getRuleMessage, resizeTextarea, getStringLength, runRuleValidator } from \"./utils.mjs\";\nimport { cellSharedProps } from \"../cell/Cell.mjs\";\nimport { useParent, useEventListener, CUSTOM_FIELD_INJECTION_KEY } from \"@vant/use\";\nimport { useId } from \"../composables/use-id.mjs\";\nimport { useExpose } from \"../composables/use-expose.mjs\";\nimport { Icon } from \"../icon/index.mjs\";\nimport { Cell } from \"../cell/index.mjs\";\nconst [name, bem] = createNamespace(\"field\");\nconst fieldSharedProps = {\n  id: String,\n  name: String,\n  leftIcon: String,\n  rightIcon: String,\n  autofocus: Boolean,\n  clearable: Boolean,\n  maxlength: numericProp,\n  formatter: Function,\n  clearIcon: makeStringProp(\"clear\"),\n  modelValue: makeNumericProp(\"\"),\n  inputAlign: String,\n  placeholder: String,\n  autocomplete: String,\n  errorMessage: String,\n  enterkeyhint: String,\n  clearTrigger: makeStringProp(\"focus\"),\n  formatTrigger: makeStringProp(\"onChange\"),\n  error: {\n    type: Boolean,\n    default: null\n  },\n  disabled: {\n    type: Boolean,\n    default: null\n  },\n  readonly: {\n    type: Boolean,\n    default: null\n  }\n};\nconst fieldProps = extend({}, cellSharedProps, fieldSharedProps, {\n  rows: numericProp,\n  type: makeStringProp(\"text\"),\n  rules: Array,\n  autosize: [Boolean, Object],\n  labelWidth: numericProp,\n  labelClass: unknownProp,\n  labelAlign: String,\n  showWordLimit: Boolean,\n  errorMessageAlign: String,\n  colon: {\n    type: Boolean,\n    default: null\n  }\n});\nvar stdin_default = defineComponent({\n  name,\n  props: fieldProps,\n  emits: [\"blur\", \"focus\", \"clear\", \"keypress\", \"clickInput\", \"endValidate\", \"startValidate\", \"clickLeftIcon\", \"clickRightIcon\", \"update:modelValue\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const id = useId();\n    const state = reactive({\n      status: \"unvalidated\",\n      focused: false,\n      validateMessage: \"\"\n    });\n    const inputRef = ref();\n    const clearIconRef = ref();\n    const customValue = ref();\n    const {\n      parent: form\n    } = useParent(FORM_KEY);\n    const getModelValue = () => {\n      var _a;\n      return String((_a = props.modelValue) != null ? _a : \"\");\n    };\n    const getProp = key => {\n      if (isDef(props[key])) {\n        return props[key];\n      }\n      if (form && isDef(form.props[key])) {\n        return form.props[key];\n      }\n    };\n    const showClear = computed(() => {\n      const readonly = getProp(\"readonly\");\n      if (props.clearable && !readonly) {\n        const hasValue = getModelValue() !== \"\";\n        const trigger = props.clearTrigger === \"always\" || props.clearTrigger === \"focus\" && state.focused;\n        return hasValue && trigger;\n      }\n      return false;\n    });\n    const formValue = computed(() => {\n      if (customValue.value && slots.input) {\n        return customValue.value();\n      }\n      return props.modelValue;\n    });\n    const runRules = rules => rules.reduce((promise, rule) => promise.then(() => {\n      if (state.status === \"failed\") {\n        return;\n      }\n      let {\n        value\n      } = formValue;\n      if (rule.formatter) {\n        value = rule.formatter(value, rule);\n      }\n      if (!runSyncRule(value, rule)) {\n        state.status = \"failed\";\n        state.validateMessage = getRuleMessage(value, rule);\n        return;\n      }\n      if (rule.validator) {\n        if (isEmptyValue(value) && rule.validateEmpty === false) {\n          return;\n        }\n        return runRuleValidator(value, rule).then(result => {\n          if (result && typeof result === \"string\") {\n            state.status = \"failed\";\n            state.validateMessage = result;\n          } else if (result === false) {\n            state.status = \"failed\";\n            state.validateMessage = getRuleMessage(value, rule);\n          }\n        });\n      }\n    }), Promise.resolve());\n    const resetValidation = () => {\n      state.status = \"unvalidated\";\n      state.validateMessage = \"\";\n    };\n    const endValidate = () => emit(\"endValidate\", {\n      status: state.status,\n      message: state.validateMessage\n    });\n    const validate = (rules = props.rules) => new Promise(resolve => {\n      resetValidation();\n      if (rules) {\n        emit(\"startValidate\");\n        runRules(rules).then(() => {\n          if (state.status === \"failed\") {\n            resolve({\n              name: props.name,\n              message: state.validateMessage\n            });\n            endValidate();\n          } else {\n            state.status = \"passed\";\n            resolve();\n            endValidate();\n          }\n        });\n      } else {\n        resolve();\n      }\n    });\n    const validateWithTrigger = trigger => {\n      if (form && props.rules) {\n        const {\n          validateTrigger\n        } = form.props;\n        const defaultTrigger = toArray(validateTrigger).includes(trigger);\n        const rules = props.rules.filter(rule => {\n          if (rule.trigger) {\n            return toArray(rule.trigger).includes(trigger);\n          }\n          return defaultTrigger;\n        });\n        if (rules.length) {\n          validate(rules);\n        }\n      }\n    };\n    const limitValueLength = value => {\n      var _a;\n      const {\n        maxlength\n      } = props;\n      if (isDef(maxlength) && getStringLength(value) > +maxlength) {\n        const modelValue = getModelValue();\n        if (modelValue && getStringLength(modelValue) === +maxlength) {\n          return modelValue;\n        }\n        const selectionEnd = (_a = inputRef.value) == null ? void 0 : _a.selectionEnd;\n        if (state.focused && selectionEnd) {\n          const valueArr = [...value];\n          const exceededLength = valueArr.length - +maxlength;\n          valueArr.splice(selectionEnd - exceededLength, exceededLength);\n          return valueArr.join(\"\");\n        }\n        return cutString(value, +maxlength);\n      }\n      return value;\n    };\n    const updateValue = (value, trigger = \"onChange\") => {\n      const originalValue = value;\n      value = limitValueLength(value);\n      const limitDiffLen = getStringLength(originalValue) - getStringLength(value);\n      if (props.type === \"number\" || props.type === \"digit\") {\n        const isNumber = props.type === \"number\";\n        value = formatNumber(value, isNumber, isNumber);\n      }\n      let formatterDiffLen = 0;\n      if (props.formatter && trigger === props.formatTrigger) {\n        const {\n          formatter,\n          maxlength\n        } = props;\n        value = formatter(value);\n        if (isDef(maxlength) && getStringLength(value) > +maxlength) {\n          value = cutString(value, +maxlength);\n        }\n        if (inputRef.value && state.focused) {\n          const {\n            selectionEnd\n          } = inputRef.value;\n          const bcoVal = cutString(originalValue, selectionEnd);\n          formatterDiffLen = getStringLength(formatter(bcoVal)) - getStringLength(bcoVal);\n        }\n      }\n      if (inputRef.value && inputRef.value.value !== value) {\n        if (state.focused) {\n          let {\n            selectionStart,\n            selectionEnd\n          } = inputRef.value;\n          inputRef.value.value = value;\n          if (isDef(selectionStart) && isDef(selectionEnd)) {\n            const valueLen = getStringLength(value);\n            if (limitDiffLen) {\n              selectionStart -= limitDiffLen;\n              selectionEnd -= limitDiffLen;\n            } else if (formatterDiffLen) {\n              selectionStart += formatterDiffLen;\n              selectionEnd += formatterDiffLen;\n            }\n            inputRef.value.setSelectionRange(Math.min(selectionStart, valueLen), Math.min(selectionEnd, valueLen));\n          }\n        } else {\n          inputRef.value.value = value;\n        }\n      }\n      if (value !== props.modelValue) {\n        emit(\"update:modelValue\", value);\n      }\n    };\n    const onInput = event => {\n      if (!event.target.composing) {\n        updateValue(event.target.value);\n      }\n    };\n    const blur = () => {\n      var _a;\n      return (_a = inputRef.value) == null ? void 0 : _a.blur();\n    };\n    const focus = () => {\n      var _a;\n      return (_a = inputRef.value) == null ? void 0 : _a.focus();\n    };\n    const adjustTextareaSize = () => {\n      const input = inputRef.value;\n      if (props.type === \"textarea\" && props.autosize && input) {\n        resizeTextarea(input, props.autosize);\n      }\n    };\n    const onFocus = event => {\n      state.focused = true;\n      emit(\"focus\", event);\n      nextTick(adjustTextareaSize);\n      if (getProp(\"readonly\")) {\n        blur();\n      }\n    };\n    const onBlur = event => {\n      if (getProp(\"readonly\")) {\n        return;\n      }\n      state.focused = false;\n      updateValue(getModelValue(), \"onBlur\");\n      emit(\"blur\", event);\n      validateWithTrigger(\"onBlur\");\n      nextTick(adjustTextareaSize);\n      resetScroll();\n    };\n    const onClickInput = event => emit(\"clickInput\", event);\n    const onClickLeftIcon = event => emit(\"clickLeftIcon\", event);\n    const onClickRightIcon = event => emit(\"clickRightIcon\", event);\n    const onClear = event => {\n      preventDefault(event);\n      emit(\"update:modelValue\", \"\");\n      emit(\"clear\", event);\n    };\n    const showError = computed(() => {\n      if (typeof props.error === \"boolean\") {\n        return props.error;\n      }\n      if (form && form.props.showError && state.status === \"failed\") {\n        return true;\n      }\n    });\n    const labelStyle = computed(() => {\n      const labelWidth = getProp(\"labelWidth\");\n      if (labelWidth) {\n        return {\n          width: addUnit(labelWidth)\n        };\n      }\n    });\n    const onKeypress = event => {\n      const ENTER_CODE = 13;\n      if (event.keyCode === ENTER_CODE) {\n        const submitOnEnter = form && form.props.submitOnEnter;\n        if (!submitOnEnter && props.type !== \"textarea\") {\n          preventDefault(event);\n        }\n        if (props.type === \"search\") {\n          blur();\n        }\n      }\n      emit(\"keypress\", event);\n    };\n    const getInputId = () => props.id || `${id}-input`;\n    const getValidationStatus = () => state.status;\n    const renderInput = () => {\n      const controlClass = bem(\"control\", [getProp(\"inputAlign\"), {\n        error: showError.value,\n        custom: !!slots.input,\n        \"min-height\": props.type === \"textarea\" && !props.autosize\n      }]);\n      if (slots.input) {\n        return _createVNode(\"div\", {\n          \"class\": controlClass,\n          \"onClick\": onClickInput\n        }, [slots.input()]);\n      }\n      const inputAttrs = {\n        id: getInputId(),\n        ref: inputRef,\n        name: props.name,\n        rows: props.rows !== void 0 ? +props.rows : void 0,\n        class: controlClass,\n        disabled: getProp(\"disabled\"),\n        readonly: getProp(\"readonly\"),\n        autofocus: props.autofocus,\n        placeholder: props.placeholder,\n        autocomplete: props.autocomplete,\n        enterkeyhint: props.enterkeyhint,\n        \"aria-labelledby\": props.label ? `${id}-label` : void 0,\n        onBlur,\n        onFocus,\n        onInput,\n        onClick: onClickInput,\n        onChange: endComposing,\n        onKeypress,\n        onCompositionend: endComposing,\n        onCompositionstart: startComposing\n      };\n      if (props.type === \"textarea\") {\n        return _createVNode(\"textarea\", inputAttrs, null);\n      }\n      return _createVNode(\"input\", _mergeProps(mapInputType(props.type), inputAttrs), null);\n    };\n    const renderLeftIcon = () => {\n      const leftIconSlot = slots[\"left-icon\"];\n      if (props.leftIcon || leftIconSlot) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"left-icon\"),\n          \"onClick\": onClickLeftIcon\n        }, [leftIconSlot ? leftIconSlot() : _createVNode(Icon, {\n          \"name\": props.leftIcon,\n          \"classPrefix\": props.iconPrefix\n        }, null)]);\n      }\n    };\n    const renderRightIcon = () => {\n      const rightIconSlot = slots[\"right-icon\"];\n      if (props.rightIcon || rightIconSlot) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"right-icon\"),\n          \"onClick\": onClickRightIcon\n        }, [rightIconSlot ? rightIconSlot() : _createVNode(Icon, {\n          \"name\": props.rightIcon,\n          \"classPrefix\": props.iconPrefix\n        }, null)]);\n      }\n    };\n    const renderWordLimit = () => {\n      if (props.showWordLimit && props.maxlength) {\n        const count = getStringLength(getModelValue());\n        return _createVNode(\"div\", {\n          \"class\": bem(\"word-limit\")\n        }, [_createVNode(\"span\", {\n          \"class\": bem(\"word-num\")\n        }, [count]), _createTextVNode(\"/\"), props.maxlength]);\n      }\n    };\n    const renderMessage = () => {\n      if (form && form.props.showErrorMessage === false) {\n        return;\n      }\n      const message = props.errorMessage || state.validateMessage;\n      if (message) {\n        const slot = slots[\"error-message\"];\n        const errorMessageAlign = getProp(\"errorMessageAlign\");\n        return _createVNode(\"div\", {\n          \"class\": bem(\"error-message\", errorMessageAlign)\n        }, [slot ? slot({\n          message\n        }) : message]);\n      }\n    };\n    const renderLabel = () => {\n      const colon = getProp(\"colon\") ? \":\" : \"\";\n      if (slots.label) {\n        return [slots.label(), colon];\n      }\n      if (props.label) {\n        return _createVNode(\"label\", {\n          \"id\": `${id}-label`,\n          \"for\": getInputId()\n        }, [props.label + colon]);\n      }\n    };\n    const renderFieldBody = () => [_createVNode(\"div\", {\n      \"class\": bem(\"body\")\n    }, [renderInput(), showClear.value && _createVNode(Icon, {\n      \"ref\": clearIconRef,\n      \"name\": props.clearIcon,\n      \"class\": bem(\"clear\")\n    }, null), renderRightIcon(), slots.button && _createVNode(\"div\", {\n      \"class\": bem(\"button\")\n    }, [slots.button()])]), renderWordLimit(), renderMessage()];\n    useExpose({\n      blur,\n      focus,\n      validate,\n      formValue,\n      resetValidation,\n      getValidationStatus\n    });\n    provide(CUSTOM_FIELD_INJECTION_KEY, {\n      customValue,\n      resetValidation,\n      validateWithTrigger\n    });\n    watch(() => props.modelValue, () => {\n      updateValue(getModelValue());\n      resetValidation();\n      validateWithTrigger(\"onChange\");\n      nextTick(adjustTextareaSize);\n    });\n    onMounted(() => {\n      updateValue(getModelValue(), props.formatTrigger);\n      nextTick(adjustTextareaSize);\n    });\n    useEventListener(\"touchstart\", onClear, {\n      target: computed(() => {\n        var _a;\n        return (_a = clearIconRef.value) == null ? void 0 : _a.$el;\n      })\n    });\n    return () => {\n      const disabled = getProp(\"disabled\");\n      const labelAlign = getProp(\"labelAlign\");\n      const LeftIcon = renderLeftIcon();\n      const renderTitle = () => {\n        const Label = renderLabel();\n        if (labelAlign === \"top\") {\n          return [LeftIcon, Label].filter(Boolean);\n        }\n        return Label || [];\n      };\n      return _createVNode(Cell, {\n        \"size\": props.size,\n        \"class\": bem({\n          error: showError.value,\n          disabled,\n          [`label-${labelAlign}`]: labelAlign\n        }),\n        \"center\": props.center,\n        \"border\": props.border,\n        \"isLink\": props.isLink,\n        \"clickable\": props.clickable,\n        \"titleStyle\": labelStyle.value,\n        \"valueClass\": bem(\"value\"),\n        \"titleClass\": [bem(\"label\", [labelAlign, {\n          required: props.required\n        }]), props.labelClass],\n        \"arrowDirection\": props.arrowDirection\n      }, {\n        icon: LeftIcon && labelAlign !== \"top\" ? () => LeftIcon : null,\n        title: renderTitle,\n        value: renderFieldBody,\n        extra: slots.extra\n      });\n    };\n  }\n});\nexport { stdin_default as default, fieldProps, fieldSharedProps };","map":{"version":3,"names":["createTextVNode","_createTextVNode","mergeProps","_mergeProps","createVNode","_createVNode","ref","watch","provide","computed","nextTick","reactive","onMounted","defineComponent","isDef","extend","addUnit","toArray","FORM_KEY","numericProp","unknownProp","resetScroll","formatNumber","preventDefault","makeStringProp","makeNumericProp","createNamespace","cutString","runSyncRule","endComposing","mapInputType","isEmptyValue","startComposing","getRuleMessage","resizeTextarea","getStringLength","runRuleValidator","cellSharedProps","useParent","useEventListener","CUSTOM_FIELD_INJECTION_KEY","useId","useExpose","Icon","Cell","name","bem","fieldSharedProps","id","String","leftIcon","rightIcon","autofocus","Boolean","clearable","maxlength","formatter","Function","clearIcon","modelValue","inputAlign","placeholder","autocomplete","errorMessage","enterkeyhint","clearTrigger","formatTrigger","error","type","default","disabled","readonly","fieldProps","rows","rules","Array","autosize","Object","labelWidth","labelClass","labelAlign","showWordLimit","errorMessageAlign","colon","stdin_default","props","emits","setup","emit","slots","state","status","focused","validateMessage","inputRef","clearIconRef","customValue","parent","form","getModelValue","_a","getProp","key","showClear","hasValue","trigger","formValue","value","input","runRules","reduce","promise","rule","then","validator","validateEmpty","result","Promise","resolve","resetValidation","endValidate","message","validate","validateWithTrigger","validateTrigger","defaultTrigger","includes","filter","length","limitValueLength","selectionEnd","valueArr","exceededLength","splice","join","updateValue","originalValue","limitDiffLen","isNumber","formatterDiffLen","bcoVal","selectionStart","valueLen","setSelectionRange","Math","min","onInput","event","target","composing","blur","focus","adjustTextareaSize","onFocus","onBlur","onClickInput","onClickLeftIcon","onClickRightIcon","onClear","showError","labelStyle","width","onKeypress","ENTER_CODE","keyCode","submitOnEnter","getInputId","getValidationStatus","renderInput","controlClass","custom","inputAttrs","class","label","onClick","onChange","onCompositionend","onCompositionstart","renderLeftIcon","leftIconSlot","iconPrefix","renderRightIcon","rightIconSlot","renderWordLimit","count","renderMessage","showErrorMessage","slot","renderLabel","renderFieldBody","button","$el","LeftIcon","renderTitle","Label","size","center","border","isLink","clickable","required","arrowDirection","icon","title","extra"],"sources":["D:/java项目/网易云音乐/node_modules/vant/es/field/Field.mjs"],"sourcesContent":["import { createTextVNode as _createTextVNode, mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\nimport { ref, watch, provide, computed, nextTick, reactive, onMounted, defineComponent } from \"vue\";\nimport { isDef, extend, addUnit, toArray, FORM_KEY, numericProp, unknownProp, resetScroll, formatNumber, preventDefault, makeStringProp, makeNumericProp, createNamespace } from \"../utils/index.mjs\";\nimport { cutString, runSyncRule, endComposing, mapInputType, isEmptyValue, startComposing, getRuleMessage, resizeTextarea, getStringLength, runRuleValidator } from \"./utils.mjs\";\nimport { cellSharedProps } from \"../cell/Cell.mjs\";\nimport { useParent, useEventListener, CUSTOM_FIELD_INJECTION_KEY } from \"@vant/use\";\nimport { useId } from \"../composables/use-id.mjs\";\nimport { useExpose } from \"../composables/use-expose.mjs\";\nimport { Icon } from \"../icon/index.mjs\";\nimport { Cell } from \"../cell/index.mjs\";\nconst [name, bem] = createNamespace(\"field\");\nconst fieldSharedProps = {\n  id: String,\n  name: String,\n  leftIcon: String,\n  rightIcon: String,\n  autofocus: Boolean,\n  clearable: Boolean,\n  maxlength: numericProp,\n  formatter: Function,\n  clearIcon: makeStringProp(\"clear\"),\n  modelValue: makeNumericProp(\"\"),\n  inputAlign: String,\n  placeholder: String,\n  autocomplete: String,\n  errorMessage: String,\n  enterkeyhint: String,\n  clearTrigger: makeStringProp(\"focus\"),\n  formatTrigger: makeStringProp(\"onChange\"),\n  error: {\n    type: Boolean,\n    default: null\n  },\n  disabled: {\n    type: Boolean,\n    default: null\n  },\n  readonly: {\n    type: Boolean,\n    default: null\n  }\n};\nconst fieldProps = extend({}, cellSharedProps, fieldSharedProps, {\n  rows: numericProp,\n  type: makeStringProp(\"text\"),\n  rules: Array,\n  autosize: [Boolean, Object],\n  labelWidth: numericProp,\n  labelClass: unknownProp,\n  labelAlign: String,\n  showWordLimit: Boolean,\n  errorMessageAlign: String,\n  colon: {\n    type: Boolean,\n    default: null\n  }\n});\nvar stdin_default = defineComponent({\n  name,\n  props: fieldProps,\n  emits: [\"blur\", \"focus\", \"clear\", \"keypress\", \"clickInput\", \"endValidate\", \"startValidate\", \"clickLeftIcon\", \"clickRightIcon\", \"update:modelValue\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const id = useId();\n    const state = reactive({\n      status: \"unvalidated\",\n      focused: false,\n      validateMessage: \"\"\n    });\n    const inputRef = ref();\n    const clearIconRef = ref();\n    const customValue = ref();\n    const {\n      parent: form\n    } = useParent(FORM_KEY);\n    const getModelValue = () => {\n      var _a;\n      return String((_a = props.modelValue) != null ? _a : \"\");\n    };\n    const getProp = (key) => {\n      if (isDef(props[key])) {\n        return props[key];\n      }\n      if (form && isDef(form.props[key])) {\n        return form.props[key];\n      }\n    };\n    const showClear = computed(() => {\n      const readonly = getProp(\"readonly\");\n      if (props.clearable && !readonly) {\n        const hasValue = getModelValue() !== \"\";\n        const trigger = props.clearTrigger === \"always\" || props.clearTrigger === \"focus\" && state.focused;\n        return hasValue && trigger;\n      }\n      return false;\n    });\n    const formValue = computed(() => {\n      if (customValue.value && slots.input) {\n        return customValue.value();\n      }\n      return props.modelValue;\n    });\n    const runRules = (rules) => rules.reduce((promise, rule) => promise.then(() => {\n      if (state.status === \"failed\") {\n        return;\n      }\n      let {\n        value\n      } = formValue;\n      if (rule.formatter) {\n        value = rule.formatter(value, rule);\n      }\n      if (!runSyncRule(value, rule)) {\n        state.status = \"failed\";\n        state.validateMessage = getRuleMessage(value, rule);\n        return;\n      }\n      if (rule.validator) {\n        if (isEmptyValue(value) && rule.validateEmpty === false) {\n          return;\n        }\n        return runRuleValidator(value, rule).then((result) => {\n          if (result && typeof result === \"string\") {\n            state.status = \"failed\";\n            state.validateMessage = result;\n          } else if (result === false) {\n            state.status = \"failed\";\n            state.validateMessage = getRuleMessage(value, rule);\n          }\n        });\n      }\n    }), Promise.resolve());\n    const resetValidation = () => {\n      state.status = \"unvalidated\";\n      state.validateMessage = \"\";\n    };\n    const endValidate = () => emit(\"endValidate\", {\n      status: state.status,\n      message: state.validateMessage\n    });\n    const validate = (rules = props.rules) => new Promise((resolve) => {\n      resetValidation();\n      if (rules) {\n        emit(\"startValidate\");\n        runRules(rules).then(() => {\n          if (state.status === \"failed\") {\n            resolve({\n              name: props.name,\n              message: state.validateMessage\n            });\n            endValidate();\n          } else {\n            state.status = \"passed\";\n            resolve();\n            endValidate();\n          }\n        });\n      } else {\n        resolve();\n      }\n    });\n    const validateWithTrigger = (trigger) => {\n      if (form && props.rules) {\n        const {\n          validateTrigger\n        } = form.props;\n        const defaultTrigger = toArray(validateTrigger).includes(trigger);\n        const rules = props.rules.filter((rule) => {\n          if (rule.trigger) {\n            return toArray(rule.trigger).includes(trigger);\n          }\n          return defaultTrigger;\n        });\n        if (rules.length) {\n          validate(rules);\n        }\n      }\n    };\n    const limitValueLength = (value) => {\n      var _a;\n      const {\n        maxlength\n      } = props;\n      if (isDef(maxlength) && getStringLength(value) > +maxlength) {\n        const modelValue = getModelValue();\n        if (modelValue && getStringLength(modelValue) === +maxlength) {\n          return modelValue;\n        }\n        const selectionEnd = (_a = inputRef.value) == null ? void 0 : _a.selectionEnd;\n        if (state.focused && selectionEnd) {\n          const valueArr = [...value];\n          const exceededLength = valueArr.length - +maxlength;\n          valueArr.splice(selectionEnd - exceededLength, exceededLength);\n          return valueArr.join(\"\");\n        }\n        return cutString(value, +maxlength);\n      }\n      return value;\n    };\n    const updateValue = (value, trigger = \"onChange\") => {\n      const originalValue = value;\n      value = limitValueLength(value);\n      const limitDiffLen = getStringLength(originalValue) - getStringLength(value);\n      if (props.type === \"number\" || props.type === \"digit\") {\n        const isNumber = props.type === \"number\";\n        value = formatNumber(value, isNumber, isNumber);\n      }\n      let formatterDiffLen = 0;\n      if (props.formatter && trigger === props.formatTrigger) {\n        const {\n          formatter,\n          maxlength\n        } = props;\n        value = formatter(value);\n        if (isDef(maxlength) && getStringLength(value) > +maxlength) {\n          value = cutString(value, +maxlength);\n        }\n        if (inputRef.value && state.focused) {\n          const {\n            selectionEnd\n          } = inputRef.value;\n          const bcoVal = cutString(originalValue, selectionEnd);\n          formatterDiffLen = getStringLength(formatter(bcoVal)) - getStringLength(bcoVal);\n        }\n      }\n      if (inputRef.value && inputRef.value.value !== value) {\n        if (state.focused) {\n          let {\n            selectionStart,\n            selectionEnd\n          } = inputRef.value;\n          inputRef.value.value = value;\n          if (isDef(selectionStart) && isDef(selectionEnd)) {\n            const valueLen = getStringLength(value);\n            if (limitDiffLen) {\n              selectionStart -= limitDiffLen;\n              selectionEnd -= limitDiffLen;\n            } else if (formatterDiffLen) {\n              selectionStart += formatterDiffLen;\n              selectionEnd += formatterDiffLen;\n            }\n            inputRef.value.setSelectionRange(Math.min(selectionStart, valueLen), Math.min(selectionEnd, valueLen));\n          }\n        } else {\n          inputRef.value.value = value;\n        }\n      }\n      if (value !== props.modelValue) {\n        emit(\"update:modelValue\", value);\n      }\n    };\n    const onInput = (event) => {\n      if (!event.target.composing) {\n        updateValue(event.target.value);\n      }\n    };\n    const blur = () => {\n      var _a;\n      return (_a = inputRef.value) == null ? void 0 : _a.blur();\n    };\n    const focus = () => {\n      var _a;\n      return (_a = inputRef.value) == null ? void 0 : _a.focus();\n    };\n    const adjustTextareaSize = () => {\n      const input = inputRef.value;\n      if (props.type === \"textarea\" && props.autosize && input) {\n        resizeTextarea(input, props.autosize);\n      }\n    };\n    const onFocus = (event) => {\n      state.focused = true;\n      emit(\"focus\", event);\n      nextTick(adjustTextareaSize);\n      if (getProp(\"readonly\")) {\n        blur();\n      }\n    };\n    const onBlur = (event) => {\n      if (getProp(\"readonly\")) {\n        return;\n      }\n      state.focused = false;\n      updateValue(getModelValue(), \"onBlur\");\n      emit(\"blur\", event);\n      validateWithTrigger(\"onBlur\");\n      nextTick(adjustTextareaSize);\n      resetScroll();\n    };\n    const onClickInput = (event) => emit(\"clickInput\", event);\n    const onClickLeftIcon = (event) => emit(\"clickLeftIcon\", event);\n    const onClickRightIcon = (event) => emit(\"clickRightIcon\", event);\n    const onClear = (event) => {\n      preventDefault(event);\n      emit(\"update:modelValue\", \"\");\n      emit(\"clear\", event);\n    };\n    const showError = computed(() => {\n      if (typeof props.error === \"boolean\") {\n        return props.error;\n      }\n      if (form && form.props.showError && state.status === \"failed\") {\n        return true;\n      }\n    });\n    const labelStyle = computed(() => {\n      const labelWidth = getProp(\"labelWidth\");\n      if (labelWidth) {\n        return {\n          width: addUnit(labelWidth)\n        };\n      }\n    });\n    const onKeypress = (event) => {\n      const ENTER_CODE = 13;\n      if (event.keyCode === ENTER_CODE) {\n        const submitOnEnter = form && form.props.submitOnEnter;\n        if (!submitOnEnter && props.type !== \"textarea\") {\n          preventDefault(event);\n        }\n        if (props.type === \"search\") {\n          blur();\n        }\n      }\n      emit(\"keypress\", event);\n    };\n    const getInputId = () => props.id || `${id}-input`;\n    const getValidationStatus = () => state.status;\n    const renderInput = () => {\n      const controlClass = bem(\"control\", [getProp(\"inputAlign\"), {\n        error: showError.value,\n        custom: !!slots.input,\n        \"min-height\": props.type === \"textarea\" && !props.autosize\n      }]);\n      if (slots.input) {\n        return _createVNode(\"div\", {\n          \"class\": controlClass,\n          \"onClick\": onClickInput\n        }, [slots.input()]);\n      }\n      const inputAttrs = {\n        id: getInputId(),\n        ref: inputRef,\n        name: props.name,\n        rows: props.rows !== void 0 ? +props.rows : void 0,\n        class: controlClass,\n        disabled: getProp(\"disabled\"),\n        readonly: getProp(\"readonly\"),\n        autofocus: props.autofocus,\n        placeholder: props.placeholder,\n        autocomplete: props.autocomplete,\n        enterkeyhint: props.enterkeyhint,\n        \"aria-labelledby\": props.label ? `${id}-label` : void 0,\n        onBlur,\n        onFocus,\n        onInput,\n        onClick: onClickInput,\n        onChange: endComposing,\n        onKeypress,\n        onCompositionend: endComposing,\n        onCompositionstart: startComposing\n      };\n      if (props.type === \"textarea\") {\n        return _createVNode(\"textarea\", inputAttrs, null);\n      }\n      return _createVNode(\"input\", _mergeProps(mapInputType(props.type), inputAttrs), null);\n    };\n    const renderLeftIcon = () => {\n      const leftIconSlot = slots[\"left-icon\"];\n      if (props.leftIcon || leftIconSlot) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"left-icon\"),\n          \"onClick\": onClickLeftIcon\n        }, [leftIconSlot ? leftIconSlot() : _createVNode(Icon, {\n          \"name\": props.leftIcon,\n          \"classPrefix\": props.iconPrefix\n        }, null)]);\n      }\n    };\n    const renderRightIcon = () => {\n      const rightIconSlot = slots[\"right-icon\"];\n      if (props.rightIcon || rightIconSlot) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"right-icon\"),\n          \"onClick\": onClickRightIcon\n        }, [rightIconSlot ? rightIconSlot() : _createVNode(Icon, {\n          \"name\": props.rightIcon,\n          \"classPrefix\": props.iconPrefix\n        }, null)]);\n      }\n    };\n    const renderWordLimit = () => {\n      if (props.showWordLimit && props.maxlength) {\n        const count = getStringLength(getModelValue());\n        return _createVNode(\"div\", {\n          \"class\": bem(\"word-limit\")\n        }, [_createVNode(\"span\", {\n          \"class\": bem(\"word-num\")\n        }, [count]), _createTextVNode(\"/\"), props.maxlength]);\n      }\n    };\n    const renderMessage = () => {\n      if (form && form.props.showErrorMessage === false) {\n        return;\n      }\n      const message = props.errorMessage || state.validateMessage;\n      if (message) {\n        const slot = slots[\"error-message\"];\n        const errorMessageAlign = getProp(\"errorMessageAlign\");\n        return _createVNode(\"div\", {\n          \"class\": bem(\"error-message\", errorMessageAlign)\n        }, [slot ? slot({\n          message\n        }) : message]);\n      }\n    };\n    const renderLabel = () => {\n      const colon = getProp(\"colon\") ? \":\" : \"\";\n      if (slots.label) {\n        return [slots.label(), colon];\n      }\n      if (props.label) {\n        return _createVNode(\"label\", {\n          \"id\": `${id}-label`,\n          \"for\": getInputId()\n        }, [props.label + colon]);\n      }\n    };\n    const renderFieldBody = () => [_createVNode(\"div\", {\n      \"class\": bem(\"body\")\n    }, [renderInput(), showClear.value && _createVNode(Icon, {\n      \"ref\": clearIconRef,\n      \"name\": props.clearIcon,\n      \"class\": bem(\"clear\")\n    }, null), renderRightIcon(), slots.button && _createVNode(\"div\", {\n      \"class\": bem(\"button\")\n    }, [slots.button()])]), renderWordLimit(), renderMessage()];\n    useExpose({\n      blur,\n      focus,\n      validate,\n      formValue,\n      resetValidation,\n      getValidationStatus\n    });\n    provide(CUSTOM_FIELD_INJECTION_KEY, {\n      customValue,\n      resetValidation,\n      validateWithTrigger\n    });\n    watch(() => props.modelValue, () => {\n      updateValue(getModelValue());\n      resetValidation();\n      validateWithTrigger(\"onChange\");\n      nextTick(adjustTextareaSize);\n    });\n    onMounted(() => {\n      updateValue(getModelValue(), props.formatTrigger);\n      nextTick(adjustTextareaSize);\n    });\n    useEventListener(\"touchstart\", onClear, {\n      target: computed(() => {\n        var _a;\n        return (_a = clearIconRef.value) == null ? void 0 : _a.$el;\n      })\n    });\n    return () => {\n      const disabled = getProp(\"disabled\");\n      const labelAlign = getProp(\"labelAlign\");\n      const LeftIcon = renderLeftIcon();\n      const renderTitle = () => {\n        const Label = renderLabel();\n        if (labelAlign === \"top\") {\n          return [LeftIcon, Label].filter(Boolean);\n        }\n        return Label || [];\n      };\n      return _createVNode(Cell, {\n        \"size\": props.size,\n        \"class\": bem({\n          error: showError.value,\n          disabled,\n          [`label-${labelAlign}`]: labelAlign\n        }),\n        \"center\": props.center,\n        \"border\": props.border,\n        \"isLink\": props.isLink,\n        \"clickable\": props.clickable,\n        \"titleStyle\": labelStyle.value,\n        \"valueClass\": bem(\"value\"),\n        \"titleClass\": [bem(\"label\", [labelAlign, {\n          required: props.required\n        }]), props.labelClass],\n        \"arrowDirection\": props.arrowDirection\n      }, {\n        icon: LeftIcon && labelAlign !== \"top\" ? () => LeftIcon : null,\n        title: renderTitle,\n        value: renderFieldBody,\n        extra: slots.extra\n      });\n    };\n  }\n});\nexport {\n  stdin_default as default,\n  fieldProps,\n  fieldSharedProps\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}