{"ast":null,"code":"import { getVideoComment } from \"@/request/api/home.js\";\nexport default {\n  name: \"videoPlay\",\n  data() {\n    return {\n      playVideo: null,\n      videoComments: []\n    };\n  },\n  created: async function () {\n    this.playVideo = JSON.parse(this.$route.params.video).data;\n    this.videoComments = (await getVideoComment(this.playVideo.urlInfo.id)).data.comments;\n  },\n  methods: {}\n};","map":{"version":3,"names":["getVideoComment","name","data","playVideo","videoComments","created","JSON","parse","$route","params","video","urlInfo","id","comments","methods"],"sources":["D:\\java项目\\网易云音乐\\wangyiyun-app\\src\\views\\VideoPlay.vue"],"sourcesContent":["<template>\r\n  <div class=\"main\">\r\n    <div class=\"mainTop\">\r\n      <div class=\"topItemLeft\">\r\n        <svg class=\"icon\" aria-hidden=\"true\" @click=\"$router.go(-1)\">\r\n          <use xlink:href=\"#icon-fanhui\"></use>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n    <div class=\"mainContent\">\r\n      <video width=\"390\" height=\"240\" controls autoplay=\"autoplay\">\r\n        <source :src=\"playVideo.urlInfo.url\" type=\"video/mp4\" />\r\n      </video>\r\n      <div class=\"videoInfomation\">\r\n        <div class=\"author\">\r\n          <img :src=\"playVideo.creator.avatarUrl\" class=\"contentImg\" />\r\n          <div class=\"text\">\r\n            <p class=\"contentName\">{{ playVideo.creator.nickname }}</p>\r\n            <p class=\"videoDesc\">描述:{{ playVideo.description }}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"comment\">\r\n          <!-- <van-skeleton title avatar :row=\"3\" /> -->\r\n          <div class=\"commentList\" v-for=\"(item, i) in videoComments\" :key=\"i\">\r\n            <img :src=\"item.user.avatarUrl\" class=\"userAvatar\" />\r\n            <div class=\"textContent\">\r\n              <p class=\"userName\">{{ item.user.nickname }}</p>\r\n              <p class=\"userComment\">{{ item.content }}</p>\r\n              <p class=\"sendedTime\">{{ item.timeStr }}</p>\r\n            </div>\r\n          </div>\r\n          <van-back-top bottom=\"10vh\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { getVideoComment } from \"@/request/api/home.js\";\r\nexport default {\r\n  name: \"videoPlay\",\r\n  data() {\r\n    return {\r\n      playVideo: null,\r\n      videoComments: [],\r\n    };\r\n  },\r\n  created: async function () {\r\n    this.playVideo = JSON.parse(this.$route.params.video).data;\r\n    this.videoComments = (\r\n      await getVideoComment(this.playVideo.urlInfo.id)\r\n    ).data.comments;\r\n  },\r\n\r\n  methods: {},\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.main {\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  .mainContent {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    .author {\r\n      border: 2.5px solid #999;\r\n      border-radius: 25px;\r\n      position: relative;\r\n      display: flex;\r\n      justify-content: left;\r\n      align-items: center;\r\n      .contentImg {\r\n        width: 1rem;\r\n        height: 1rem;\r\n        border-radius: 50%;\r\n      }\r\n      .text {\r\n        .contentName {\r\n          // position: absolute;\r\n          // left: 15%;\r\n          // top: 4%;\r\n          margin-top: 5px;\r\n        }\r\n        .videoDesc {\r\n          // position: absolute;\r\n          // left: 15%;\r\n          // top: 59%;\r\n          font-size: x-small;\r\n          color: #999;\r\n          margin-top: 0px;\r\n        }\r\n      }\r\n    }\r\n    .comment {\r\n      margin-top: 10px;\r\n      border: 2.5px solid #999;\r\n      border-radius: 25px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      width: 100%;\r\n      overflow: hidden;\r\n\r\n      .commentList {\r\n        overflow: hidden;\r\n        display: flex;\r\n        justify-content: left;\r\n        align-items: center;\r\n        position: relative;\r\n        margin-top: 8px;\r\n        width: 100%;\r\n        height: 1.6rem;\r\n        .userAvatar {\r\n          width: 1.2rem;\r\n          height: 1.2rem;\r\n          border-radius: 50%;\r\n        }\r\n        .textContent {\r\n          .userName {\r\n            color: rgb(225, 191, 191);\r\n          }\r\n          .userComment {\r\n            font-size: small;\r\n          }\r\n          .sendedTime {\r\n            position: absolute;\r\n            right: 0%;\r\n\r\n            font-size: xx-small;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AAuCA,SAASA,eAAc,QAAS,uBAAuB;AACvD,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,IAAI;MACfC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE,eAAAA,CAAA,EAAkB;IACzB,IAAI,CAACF,SAAQ,GAAIG,IAAI,CAACC,KAAK,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,KAAK,CAAC,CAACR,IAAI;IAC1D,IAAI,CAACE,aAAY,GAAI,CACnB,MAAMJ,eAAe,CAAC,IAAI,CAACG,SAAS,CAACQ,OAAO,CAACC,EAAE,GAC/CV,IAAI,CAACW,QAAQ;EACjB,CAAC;EAEDC,OAAO,EAAE,CAAC;AACZ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}